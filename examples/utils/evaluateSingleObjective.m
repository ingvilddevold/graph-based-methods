function val = evaluateSingleObjective(netmod, statesFine, weighting)
    % Calculate initial objective value by running optimization
    % with a single iteration.

    problem = netmod.getPackedSimulationProblem();
    samples = struct('problem', {{problem}}, ...
                     'num',     1);

    objFun = @(model, states, schedule, varargin) ...
            matchObservedOW(model, states, schedule, statesFine, varargin{:}, ...
                            weighting{:}, 'mismatchSum', false);

    p0 = OptimizationProblem(samples, ...
          'parameters', netmod.params, ...
          'name',               'tmp', ...
          'objective',         objFun, ...
          'setupType',   'simulation', ...
          'verboseSimulation',  false, ...
          'solverFunOptions',  {'scalarObjective', false});
    p0.reset('prompt', false);

    [netmod_tuned, p, h] = optimizeNetworkModel(netmod, p0, ...
                            'maxIt', 0, ...
                            'plotEvolution', false);

    val = h.val(1);
end